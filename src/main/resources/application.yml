spring:
  application:
    name: products
  profiles:
    active: default
  config:
    import: "optional:configserver:http://localhost:8070/"
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2s
  datasource:
    write:
      jdbc-url: jdbc:postgresql://localhost:5439/postgres
      username: user
      password: password
      driver-class-name: org.postgresql.Driver
    read:
      jdbc-url: jdbc:postgresql://localhost:5437/postgres
      username: user
      password: password
      driver-class-name: org.postgresql.Driver
  sql:
    init:
      mode: always
  jpa:
    properties:
      hibernate:
        dialect:  org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  cloud:
    functions:
      definition: productQuantityUpdate
    stream:
      bindings:
        productQuantityUpdate-in-0:
          destination: send-productUpdate
          group: ${spring.application.name}
      kafka:
        binder:
          brokers:
            - localhost:9092

management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    probes:
      health:
        enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8071/eureka/
